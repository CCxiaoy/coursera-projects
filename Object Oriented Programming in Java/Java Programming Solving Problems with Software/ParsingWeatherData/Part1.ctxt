#BlueJ class context
comment0.target=Part1
comment0.text=\n\ \u5728\u8FD9\u91CC\u7ED9\u51FA\u5BF9\u7C7B\ Part1\ \u7684\u63CF\u8FF0\u3002\n\ \n\ @\u4F5C\u8005\uFF08\u4F60\u7684\u540D\u5B57\uFF09\n\ @\u7248\u672C\uFF08\u4E00\u4E2A\u7248\u672C\u53F7\u6216\u8005\u4E00\u4E2A\u65E5\u671F\uFF09\n
comment1.params=currentRow\ smallestSoFar\ field
comment1.target=org.apache.commons.csv.CSVRecord\ getSmallestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord,\ java.lang.String)
comment10.params=
comment10.target=void\ testFileWithColdestTemperature()
comment11.params=
comment11.target=void\ testLowestHumidityInFile()
comment12.params=
comment12.target=void\ testLowestHumidityInManyFiles()
comment13.params=
comment13.target=void\ testAverageTemperatureInFile()
comment14.params=
comment14.target=void\ testAverageTemperatureWithHighHumidityInFile()
comment2.params=currentRow\ smallestSoFar
comment2.target=org.apache.commons.csv.CSVRecord\ getSmallestTempOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ coldestHourFile(org.apache.commons.csv.CSVParser)
comment4.params=dr
comment4.target=java.lang.String\ fileWithColdestTemperature(edu.duke.DirectoryResource)
comment5.params=parser
comment5.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment6.params=
comment6.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment7.params=parser
comment7.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment8.params=parser\ value
comment8.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment9.params=
comment9.target=void\ testColdestHourInFile()
numComments=15
